digraph diagram1 {
//programme
node_1 [label="fact,int" shape=invtrapezium color=blue];//fonction
 node_2 [label="IF" shape=diamond];//IF0
node_3 [label="<="];//cond3
node_4 [label="n" ];//expression4
node_5 [label="1" ];//expression3
node_3 -> node_4
node_3 -> node_5
node_6 [label="RETURN" shape=trapezium color=blue];//RETURN
node_7 [label="1" ];//expression3
node_6 -> node_7
node_2 -> node_3
node_2 -> node_6
node_1 -> node_2
node_10 [label="RETURN" shape=trapezium color=blue];//RETURN
node_11 [label="*" ];//expression1
node_12 [label="n" ];//expression4
node_13 [label="fact" shape=septagon];//expression5
node_14 [label="-" ];//expression1
node_15 [label="n" ];//expression4
node_16 [label="1" ];//expression3
node_14 -> node_15
node_14 -> node_16
node_13 -> node_14
node_11 -> node_12
node_11 -> node_13
node_10 -> node_11
node_1 -> node_10
node_18 [label="main,int" shape=invtrapezium color=blue];//fonction
 node_19 [label="printd" shape=septagon];//appel
node_20 [label="fact" shape=septagon];//expression5
node_21 [label="10" ];//expression3
node_20 -> node_21
node_19 -> node_20
node_18 -> node_19
node_23 [label="RETURN" shape=trapezium color=blue];//RETURN
node_24 [label="0" ];//expression3
node_23 -> node_24
node_18 -> node_23
}
